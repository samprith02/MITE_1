#include <stdio.h>

typedef struct {
    int id;
    char name[200];
    float salary;
    char department[200];
} employee;

void read(employee emp[], int n) {
    for (int i = 0; i < n; i++) {
        printf("Enter ID: ");
        scanf("%d", &emp[i].id);

        printf("Enter employee name: ");
        scanf("%s", emp[i].name);

        printf("Enter salary: ");
        scanf("%f", &emp[i].salary);

        printf("Enter department: ");
        scanf("%s", emp[i].department);

        printf("\n\n");
    }
}

void save(employee emp[], int n) {
    FILE *file = fopen("employees.txt", "a");
    if (file == NULL) {
        printf("File not created\n");
        return;
    }

    for (int i = 0; i < n; i++) {
        fprintf(file, "%d %s %.2f %s\n", emp[i].id, emp[i].name, emp[i].salary, emp[i].department);
    }
    fclose(file);
}

void loadEmployees(employee emp[], int n) {
    FILE *file = fopen("employees.txt", "r");
    if (file == NULL) {
        printf("File not found\n");
        return;
    }

    for (int i = 0; i < n; i++) {
        fscanf(file, "%d %s %f %s", &emp[i].id, emp[i].name, &emp[i].salary, emp[i].department);
    }
    fclose(file);
}

void display(employee emp[], int n) {
    printf("Employee details:\n");
    for (int i = 0; i < n; i++) {
        printf("ID: %d\n", emp[i].id);
        printf("Employee name: %s\n", emp[i].name);
        printf("Salary: %.2f\n", emp[i].salary);
        printf("Department: %s\n", emp[i].department);
        printf("\n");
    }
}

employee HighestSalary(employee emp[], int n) {
    employee highest = emp[0];
    for (int i = 1; i < n; i++) {
        if (emp[i].salary > highest.salary) {
            highest = emp[i];
        }
    }
    return highest;
}

int main() {
    int n;
    printf("Enter number of employees: \n");
    scanf("%d", &n);

    employee emp[n];
    read(emp, n);
    save(emp, n);
    loadEmployees(emp,n);
    display(emp, n);

    employee highest = HighestSalary(emp, n);
    printf("Highest salaried employee: %s, %.2f, %s\n", highest.name, highest.salary, highest.department);

    return 0;
}
